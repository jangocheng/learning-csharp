jobs:
- job: RunTests
  displayName: Run Unit/Integration Tests
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - bash: make install_dependencies
      displayName: Install Dependencies
    - bash: make test SHOPPING_SERVICE_DB_CONNECTION_STRING=$(SHOPPING_SERVICE_DB_CONNECTION_STRING) SHOPPING_SERVICE_ENVIRONMENT=production 
      displayName: Run Tests
      env:
        SHOPPING_SERVICE_ENVIRONMENT: production
        SHOPPING_SERVICE_DB_CONNECTION_STRING: $(SHOPPING_SERVICE_DB_CONNECTION_STRING)
    - task: PublishTestResults@2
      displayName: Publish Test Results
      inputs:
        testResultsFormat: 'xUnit'
        testResultsFiles: '**/TestResults.xml'
        mergeTestResults: true
    - task: PublishCodeCoverageResults@1
      displayName: Publish Code Coverage
      inputs:
        codeCoverageTool: cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/ShoppingService.Api.Tests/coverage.cobertura.xml
- job: BuildAndPublishArtifact
  dependsOn: RunTests
  displayName: Build and Publish Artifact
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - bash: make install_dependencies
      displayName: Install Dependencies
    - bash: make build_artifact
      displayName: Build Artifact
    - bash: make archive_artifact
      displayName: Archive Artifact
    - task: PublishPipelineArtifact@0
      displayName: Publish Artifact
      inputs:
        artifactName: 'shopping-service'
        targetPath: 'ShoppingServiceArtifact.zip'
- deployment: DeployJob
  dependsOn: BuildAndPublishArtifact
  displayName: Deploy to Staging Job
  pool:
    vmImage: 'ubuntu-16.04'
  environment: production
  strategy:
    runOnce:
      deploy:
        steps:
          - task: DownloadPipelineArtifact@0
            inputs:
              artifactName: 'shopping-service'
              targetPath: $(System.DefaultWorkingDirectory)
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(AZURE_SERVICE_CONNECTION)
              appType: apiApp
              WebAppName: shopping-service
              deployToSlotOrASE: true
              ResourceGroupName: Bewoogie
              SlotName: production
              packageForLinux: '$(System.DefaultWorkingDirectory)/ShoppingServiceArtifact.zip'
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: $(AZURE_SERVICE_CONNECTION)
              WebAppName: 'shopping-service'
              ResourceGroupName: 'Bewoogie'
              SourceSlot: production
