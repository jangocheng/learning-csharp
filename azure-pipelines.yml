jobs:
- job: RunTests
  displayName: Run Unit/Integration Tests
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - bash: dotnet restore
      displayName: Install Dependencies
    - bash: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --logger "trx;LogFileName=test_results.trx" --results-directory output
      displayName: Run Tests
      env:
        SHOPPING_SERVICE_ENVIRONMENT: production
        SHOPPING_SERVICE_DB_CONNECTION_STRING: $(SHOPPING_SERVICE_DB_CONNECTION_STRING)
    - task: PublishTestResults@2
      displayName: Publish Test Results
      inputs:
        testResultsFormat: 'XUnit'
        testResultsFiles: '**/test_results.trx'
        mergeTestResults: true
    - task: PublishCodeCoverageResults@1
      displayName: Publish Test Coverage
      inputs:
        codeCoverageTool: cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/**/*.cobertura.xml
- job: BuildAndPublishArtifact
  dependsOn: RunTests
  displayName: Build and Publish Artifact
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - bash: dotnet restore
      displayName: Install Dependencies
    - bash: dotnet publish -c Release -o dist
      displayName: Build Artifact
    - task: PublishPipelineArtifact@0
      displayName: Publish Artifact
      inputs:
        artifactName: 'shopping-service'
        targetPath: 'ShoppingService.Api/bin/Release/netcoreapp2.2'
# - deployment: DeployJob
#   dependsOn: DevelopmentJob
#   displayName: Deploy to Staging Job
#   pool:
#     vmImage: 'ubuntu-16.04'
#   environment: staging
#   strategy:
#     runOnce:
#       deploy:
#         steps:
#           - 
